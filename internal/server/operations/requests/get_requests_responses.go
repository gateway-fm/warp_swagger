// Code generated by go-swagger; DO NOT EDIT.

package requests

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gateway-fm/warp_swagger/internal/models"
)

// GetRequestsOKCode is the HTTP code returned for type GetRequestsOK
const GetRequestsOKCode int = 200

/*
GetRequestsOK OK

swagger:response getRequestsOK
*/
type GetRequestsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Requests `json:"body,omitempty"`
}

// NewGetRequestsOK creates GetRequestsOK with default headers values
func NewGetRequestsOK() *GetRequestsOK {

	return &GetRequestsOK{}
}

// WithPayload adds the payload to the get requests o k response
func (o *GetRequestsOK) WithPayload(payload []*models.Requests) *GetRequestsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get requests o k response
func (o *GetRequestsOK) SetPayload(payload []*models.Requests) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRequestsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Requests, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
GetRequestsDefault Error

swagger:response getRequestsDefault
*/
type GetRequestsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRequestsDefault creates GetRequestsDefault with default headers values
func NewGetRequestsDefault(code int) *GetRequestsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetRequestsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get requests default response
func (o *GetRequestsDefault) WithStatusCode(code int) *GetRequestsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get requests default response
func (o *GetRequestsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get requests default response
func (o *GetRequestsDefault) WithPayload(payload *models.Error) *GetRequestsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get requests default response
func (o *GetRequestsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRequestsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
