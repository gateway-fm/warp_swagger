########    Solarsteinn API #########
swagger: '2.0'
info:
  description: "TODO"
  version: 1.0.0
  title: "Solarsteinn"
  contact:
    email: infra@gateway.fm
  license:
    name: "MIT"
basePath: "/"
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json


########### Paths section ############
paths:
  /{org}/requests:
    parameters:
      - $ref: '#/parameters/org'
      - $ref: '#/parameters/from'
      - $ref: '#/parameters/to'
      - $ref: '#/parameters/chain'
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
    get:
      tags:
        - requests
      operationId: getRequests
      description: get Requests details
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/requests'
        default:
          $ref: '#/responses/errorResponse'

  /{org}/daily:
    parameters:
      - $ref: '#/parameters/org'
      - $ref: '#/parameters/from'
      - $ref: '#/parameters/to'
      - $ref: '#/parameters/chain'
      - $ref: '#/parameters/apiKey'
      - $ref: '#/parameters/limit'
      - $ref: '#/parameters/offset'
    get:
      tags:
        - daily
      operationId: getDaily
      description: get daily requests details
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/daily'
        default:
          $ref: '#/responses/errorResponse'


########### Parameters section ############
parameters:
  org:
    description: Organization identifier.
    type: string
    name: org
    required: true
    in: path
  from:
    description: Start date for filtering analytics. If not included, retrieves all analytics from the beginning.
    name: from
    required: false
    type: integer
    format: 'date-time'
    in: query
  to:
    description: End date for filtering analytics. If not included, retrieves analytics up to the latest.
    required: false
    type: integer
    format: 'date-time'
    name: to
    in: query
  chain:
    description: Chain identifier for filtering analytics.
    required: false
    type: string
    name: chain
    in: query
  apiKey:
    description: API key for filtering analytics.
    required: false
    type: string
    name: apiKey
    in: query
  limit:
    description: Number of records to retrieve per page for pagination. Default is set by the server.
    type: integer
    default: 1
    required: false
    name: limit
    in: query
  offset:
    description: Starting point for records retrieval for pagination. Default is 0.
    type: integer
    default: 0
    name: offset
    required: false
    in: query


########### Responses section ############
responses:
  errorResponse:
    description: Error
    schema:
      $ref: '#/definitions/error'



########### Definitions section ############
definitions:
  daily:
    description: shop model
    type: object
    properties:
      clientID:
        type: string
        description: ID of the client making the request.
      org:
        type: string
        description: Organization identifier.
      date:
        type: string
        format: date-time
        description: Date of the analytics data.
      count:
        type: integer
        format: int32
        description: Count of the requests.
      chain:
        type: string
        description: Chain identifier.
    required:
      - clientID
      - org
      - date
      - count
      - chain
  requests:
    description: shop model
    type: object
    properties:
      id:
        type: string
        format: uuid
        description: Unique identifier for the request.
      requestId:
        type: string
        description: Request ID.
      clientId:
        type: string
        description: Client ID making the request.
      clientIp:
        type: string
        description: IP address of the client making the request.
      chain:
        type: string
        description: Chain identifier.
      org:
        type: string
        description: Organization identifier.
      requestType:
        type: string
        description: Type of the request.
      requestBundle:
        type: boolean
        description: Indicates if the request is bundled.
      requestBody:
        type: string
        format: byte
        description: Body of the request.
      responseBody:
        type: string
        format: byte
        description: Body of the response.
      method:
        type: string
        description: RPC method used in the request.
      status:
        type: string
        description: Status of the request.
      error:
        type: string
        description: Error message for failed requests.
      errorCode:
        type: integer
        format: int32
        description: Error code for failed requests.
      createdAt:
        type: string
        format: date-time
        description: Timestamp of when the request was created.
      updatedAt:
        type: string
        format: date-time
        description: Timestamp of when the request was last updated.
      latency:
        type: integer
        format: int64
        description: Time it took for the request to complete.
      transport:
        type: string
        description: Transport method used for the request.
    required:
      - id
      - requestId
      - clientId
      - clientIp
      - chain
      - org
      - requestType
      - requestBundle
      - requestBody
      - responseBody
      - method
      - status
      - error
      - errorCode
      - createdAt
      - updatedAt
      - latency
      - transport
  error:
    description: the error model uses for all error responses
    type: object
    properties:
      code:
        description: error code
        type: integer
        format: int64
        example: 500
      message:
        description: error message
        type: string
        example: internal server error
      payload:
        description: payload definition depended on specific request
        type: object
        additionalProperties:
          type: string
    required:
      - message
      - code

###########        END           ############
